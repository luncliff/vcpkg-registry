#
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema
# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables
# https://github.com/actions/virtual-environments/tree/main/images
# https://github.com/lukka/CppBuildTasks
#

trigger:
  branches:
    exclude:
      - docs

pr:
  - main

schedules:
  - cron: "10 4 * * 6"
    displayName: "Weekly check"
    branches:
      include:
        - main

variables:
  - name: VCPKG_DISABLE_METRICS
    value: "true"
  - name: VCPKG_FEATURE_FLAGS
    value: "binarycaching,manifest"

stages:
  - stage: "Triplets"
    # condition: startsWith(variables['build.sourceBranch'], 'refs/heads/triplet/')
    jobs:
      - job: "arm64_android"
        pool:
          vmImage: ubuntu-20.04
        steps:
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "ijg-libjpeg"
              triplet: "arm64-android"
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "zlib-ng"
              features: "[core]"
              triplet: "arm64-android"
      - job: "x64_android"
        pool:
          vmImage: ubuntu-20.04
        steps:
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "ijg-libjpeg"
              triplet: "x64-android"
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "zlib-ng"
              features: "[core]"
              triplet: "x64-android"
      - job: "arm_android"
        pool:
          vmImage: ubuntu-20.04
        steps:
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "ijg-libjpeg"
              triplet: "arm-android"
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "zlib-ng"
              features: "[core]"
              triplet: "arm-android"
      - job: "x64_ios_simulator"
        pool:
          vmImage: macOS-10.15
        steps:
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "ijg-libjpeg"
              triplet: "x64-ios-simulator"
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "zlib-ng"
              features: "[core]"
              triplet: "x64-ios-simulator"
      - job: "arm64_ios_simulator"
        pool:
          vmImage: macOS-11
        steps:
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "ijg-libjpeg"
              triplet: "x64-ios-simulator"
          - template: azure/run-with-overlay-triplet.yml
            parameters:
              port: "zlib-ng"
              features: "[core]"
              triplet: "x64-ios-simulator"

  - stage: "Ports" # Check build status of the ports
    jobs:
      - template: azure/jobs-python3.yml
        parameters:
          job_name: "vcpkg_host_python3"
          port: "vcpkg-host-python3"

      - template: azure/jobs-linux.yml
        parameters:
          job_name: "libtorch"
          port: "libtorch"
      - template: azure/jobs-osx.yml
        parameters:
          job_name: "libtorch"
          port: "libtorch"

      - template: azure/jobs-windows.yml
        parameters:
          job_name: "libdispatch"
          port: "libdispatch"
      - template: azure/jobs-arm-windows.yml
        parameters:
          job_name: "libdispatch"
          port: "libdispatch"
      # - template: azure/jobs-android.yml # todo: decide NDK version coverage
      #   parameters:
      #     job_name: "libdispatch"
      #     port: "libdispatch"

      - template: azure/jobs-windows.yml
        parameters:
          job_name: "farmhash"
          port: "farmhash"
      - template: azure/jobs-uwp.yml
        parameters:
          job_name: "farmhash"
          port: "farmhash"
      - template: azure/jobs-linux.yml
        parameters:
          job_name: "farmhash"
          port: "farmhash"
      - template: azure/jobs-android.yml
        parameters:
          job_name: "farmhash"
          port: "farmhash"
      - template: azure/jobs-osx.yml
        parameters:
          job_name: "farmhash"
          port: "farmhash"
      - template: azure/jobs-ios.yml
        parameters:
          job_name: "farmhash"
          port: "farmhash"

      - template: azure/jobs-windows.yml
        parameters:
          job_name: "zlib_ng"
          port: "zlib-ng"
      - template: azure/jobs-linux.yml
        parameters:
          job_name: "zlib_ng"
          port: "zlib-ng"
      - template: azure/jobs-osx.yml
        parameters:
          job_name: "zlib_ng"
          port: "zlib-ng"
      - template: azure/jobs-arm-windows.yml
        parameters:
          job_name: "zlib_ng"
          port: "zlib-ng"

      - template: azure/jobs-windows.yml
        parameters:
          job_name: "openssl3"
          port: "openssl3"
      - template: azure/jobs-linux.yml
        parameters:
          job_name: "openssl3"
          port: "openssl3"
      - template: azure/jobs-osx.yml
        parameters:
          job_name: "openssl3"
          port: "openssl3"
      - template: azure/jobs-uwp.yml
        parameters:
          job_name: "openssl3"
          port: "openssl3"
      - template: azure/jobs-arm-windows.yml
        parameters:
          job_name: "openssl3"
          port: "openssl3"
      - template: azure/jobs-android.yml
        parameters:
          job_name: "openssl3"
          port: "openssl3"
      - template: azure/jobs-ios.yml
        parameters:
          job_name: "openssl3"
          port: "openssl3"

      - template: azure/jobs-windows.yml
        parameters:
          job_name: "tflite"
          port: "tensorflow-lite"
      - template: azure/jobs-linux.yml
        parameters:
          job_name: "tflite"
          port: "tensorflow-lite"
      - template: azure/jobs-osx.yml
        parameters:
          job_name: "tflite"
          port: "tensorflow-lite"

      - template: azure/jobs-android.yml
        parameters:
          job_name: "xnnpack"
          port: "xnnpack"
      - template: azure/jobs-ios.yml
        parameters:
          job_name: "xnnpack"
          port: "xnnpack"

      - template: azure/jobs-android.yml
        parameters:
          job_name: "cpuinfo"
          port: "cpuinfo"
      - template: azure/jobs-ios.yml
        parameters:
          job_name: "cpuinfo"
          port: "cpuinfo"

  - stage: "Scripts" # todo: Use of this registry
    jobs:
      - job: "CMake"
        pool:
          vmImage: windows-2019
        steps:
          - task: CondaEnvironment@0
            inputs:
              environmentName: "develop"
              packageSpecs: "python=3.9 pyqt=5.9.2"
              cleanEnvironment: true
          - task: CMake@1
            displayName: "CMake modules/scripts"
            inputs:
              cmakeArgs: "-S $(Build.SourcesDirectory)/tests"
              runInsideShell: true
            env:
              Qt5_DIR: "$(CONDA)/envs/develop/Library/lib/cmake/Qt5"
          - powershell: |
              conda env list
              Get-ChildItem "$(CONDA)\\envs\\develop"
              Get-ChildItem "$(CONDA)\\envs\\develop\\Library"
              Get-ChildItem "$(CONDA)\\envs\\develop\\Library\\lib\\pkgconfig"
              Get-ChildItem "$(CONDA)\\envs\\develop\\Library\\lib\\cmake"
            condition: failed()
      - job: "PowerShell"
        pool:
          vmImage: ubuntu-20.04
        steps:
          - task: PowerShell@2
            displayName: "Check port versions"
            inputs:
              filePath: "scripts/check-sha.ps1"

  # todo: Deploy stage
  #   Status notification + GitHub release
