diff --git a/CMakeLists.txt b/CMakeLists.txt
index fcc3f41..15fce06 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,6 @@
-cmake_minimum_required (VERSION 2.8.12)
+cmake_minimum_required (VERSION 3.22)
+set(CMAKE_CXX_STANDARD 11)
+set(CMAKE_C_STANDARD 11)
 
 # nsync provides portable synchronization primitives, such as mutexes and
 # condition variables.
@@ -88,7 +90,7 @@ if ("${CMAKE_C_COMPILER_ID}X" STREQUAL "MSVCX")
 endif ()
 
 # Pick the include directory for the operating system.
-if ("${CMAKE_SYSTEM_NAME}X" STREQUAL "WindowsX")
+if (("${CMAKE_SYSTEM_NAME}X" STREQUAL "WindowsX") OR ("${CMAKE_SYSTEM_NAME}X" STREQUAL "WindowsStoreX"))
 	include_directories ("${PROJECT_SOURCE_DIR}/platform/win32")
 	set (NSYNC_CPP_FLAGS "/TP")
 
@@ -110,7 +112,7 @@ if ("${CMAKE_SYSTEM_NAME}X" STREQUAL "WindowsX")
 	set (NSYNC_TEST_OS_SRC
 		"platform/win32/src/start_thread.c"
 	)
-elseif ("${CMAKE_SYSTEM_NAME}X" STREQUAL "DarwinX")
+elseif (("${CMAKE_SYSTEM_NAME}X" STREQUAL "DarwinX") OR ("${CMAKE_SYSTEM_NAME}X" STREQUAL "iOSX"))
 	include_directories ("${PROJECT_SOURCE_DIR}/platform/macos")
 	# Some versions of MacOS, such as Sierra, require _DARWIN_C_SOURCE
 	# when including certin C++ standard header files, such as <mutex>.
@@ -232,7 +234,7 @@ elseif (("${CMAKE_SYSTEM_PROCESSOR}X" STREQUAL "ppc64X"))
 endif ()
 
 # Windows uses some include files from the posix directory also.
-if ("${CMAKE_SYSTEM_NAME}X" STREQUAL "WindowsX")
+if (("${CMAKE_SYSTEM_NAME}X" STREQUAL "WindowsX") OR ("${CMAKE_SYSTEM_NAME}X" STREQUAL "WindowsStoreX"))
 	include_directories ("${PROJECT_SOURCE_DIR}/platform/posix")
 endif ()
 
@@ -398,7 +400,7 @@ if (NSYNC_ENABLE_TESTS)
 	endforeach (t)
 endif ()
 
-set (CMAKE_SKIP_INSTALL_ALL_DEPENDENCY ON)
+set (CMAKE_SKIP_INSTALL_ALL_DEPENDENCY FALSE)
 
 install (TARGETS nsync EXPORT nsync
 	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT RuntimeLibraries
