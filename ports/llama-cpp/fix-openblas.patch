diff --git a/CMakeLists.txt b/CMakeLists.txt
index 11ebe9e..8516e59 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -137,8 +137,8 @@ if (LLAMA_OPENBLAS)
             $ENV{OpenBLAS_HOME}
             $ENV{OpenBLAS_HOME}/include
             )
-        find_path(OPENBLAS_INC NAMES cblas.h PATHS ${OPENBLAS_INCLUDE_SEARCH_PATHS})
-        add_compile_options(-I${OPENBLAS_INC})
+        find_path(OPENBLAS_INC NAMES cblas.h openblas/cblas.h PATHS ${OPENBLAS_INCLUDE_SEARCH_PATHS})
+        include_directories(${OPENBLAS_INC})
     else()
         message(WARNING "OpenBLAS not found")
     endif()
diff --git a/ggml.c b/ggml.c
index 8505889..6b5344c 100644
--- a/ggml.c
+++ b/ggml.c
@@ -146,7 +146,7 @@ inline static void* ggml_aligned_malloc(size_t size) {
 #if defined(GGML_USE_ACCELERATE)
 #include <Accelerate/Accelerate.h>
 #elif defined(GGML_USE_OPENBLAS)
-#include <cblas.h>
+#include <openblas/cblas.h>
 #elif defined(GGML_USE_CUBLAS)
 #include "ggml-cuda.h"
 #endif
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8516e59..cb607b2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -139,6 +139,8 @@ if (LLAMA_OPENBLAS)
             )
         find_path(OPENBLAS_INC NAMES cblas.h openblas/cblas.h PATHS ${OPENBLAS_INCLUDE_SEARCH_PATHS})
         include_directories(${OPENBLAS_INC})
+        find_library(OPENBLAS_LIB NAMES openblas REQUIRED)
+        link_libraries(${OPENBLAS_LIB})
     else()
         message(WARNING "OpenBLAS not found")
     endif()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index cb607b2..f4fd773 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -123,7 +123,7 @@ if (LLAMA_OPENBLAS)
 
         add_compile_definitions(GGML_USE_OPENBLAS)
         add_link_options(${BLAS_LIBRARIES})
-        set(LLAMA_EXTRA_LIBS ${LLAMA_EXTRA_LIBS} openblas)
+        set(LLAMA_EXTRA_LIBS ${LLAMA_EXTRA_LIBS} BLAS::BLAS)
 
         # find header file
         set(OPENBLAS_INCLUDE_SEARCH_PATHS
@@ -340,7 +340,11 @@ if (GGML_CUDA_SOURCES)
     set_property(TARGET llama PROPERTY CUDA_ARCHITECTURES OFF)
 endif()
 
-
+install(TARGETS ggml llama
+    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+)
 #
 # programs, examples and tests
 #
