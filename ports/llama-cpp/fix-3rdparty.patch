diff --git a/common/CMakeLists.txt b/common/CMakeLists.txt
index 564af14..822aceb 100644
--- a/common/CMakeLists.txt
+++ b/common/CMakeLists.txt
@@ -144,7 +144,8 @@ if (LLAMA_LLGUIDANCE)
     set(LLAMA_COMMON_EXTRA_LIBS ${LLAMA_COMMON_EXTRA_LIBS} llguidance ${LLGUIDANCE_PLATFORM_LIBS})
 endif ()
 
-target_include_directories(${TARGET} PUBLIC . ../vendor)
+find_path(MINJA_INCLUDE_DIRS "minja/chat-template.hpp" REQUIRED)
+target_include_directories(${TARGET} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${MINJA_INCLUDE_DIRS})
 target_compile_features   (${TARGET} PUBLIC cxx_std_17)
 target_link_libraries     (${TARGET} PRIVATE ${LLAMA_COMMON_EXTRA_LIBS} PUBLIC llama Threads::Threads)
 
diff --git a/tools/mtmd/CMakeLists.txt b/tools/mtmd/CMakeLists.txt
index 4baa15b..d459931 100644
--- a/tools/mtmd/CMakeLists.txt
+++ b/tools/mtmd/CMakeLists.txt
@@ -17,7 +17,9 @@ target_link_libraries     (mtmd PUBLIC ggml llama)
 target_link_libraries     (mtmd PRIVATE Threads::Threads)
 target_include_directories(mtmd PUBLIC  .)
 target_include_directories(mtmd PRIVATE ../..)
-target_include_directories(mtmd PRIVATE ../../vendor)
+find_path(STB_INCLUDE_DIR stb_image.h REQUIRED)
+find_path(MINIAUDIO_INCLUDE_DIR miniaudio.h REQUIRED)
+target_include_directories(mtmd PUBLIC ${STB_INCLUDE_DIR} ${MINIAUDIO_INCLUDE_DIR})
 target_compile_features   (mtmd PRIVATE cxx_std_17)
 
 if (BUILD_SHARED_LIBS)
diff --git a/tools/mtmd/mtmd-helper.cpp b/tools/mtmd/mtmd-helper.cpp
index 64f03fd..cfd97df 100644
--- a/tools/mtmd/mtmd-helper.cpp
+++ b/tools/mtmd/mtmd-helper.cpp
@@ -27,10 +27,10 @@
 #define MA_NO_ENGINE
 #define MA_NO_GENERATION
 #define MA_API static
-#include "miniaudio/miniaudio.h"
+#include <miniaudio.h>
 
 #define STB_IMAGE_IMPLEMENTATION
-#include "stb/stb_image.h"
+#include <stb_image.h>
 
 #define LOG_INF(...) fprintf(stdout, __VA_ARGS__)
 #define LOG_ERR(...) fprintf(stderr, __VA_ARGS__)
diff --git a/tools/server/CMakeLists.txt b/tools/server/CMakeLists.txt
index c2a56aa..fd740e8 100644
--- a/tools/server/CMakeLists.txt
+++ b/tools/server/CMakeLists.txt
@@ -37,6 +37,8 @@ target_include_directories(${TARGET} PRIVATE ../llava)
 target_include_directories(${TARGET} PRIVATE ${CMAKE_SOURCE_DIR})
 target_link_libraries(${TARGET} PRIVATE common mtmd ${CMAKE_THREAD_LIBS_INIT})
 
+find_package(httplib CONFIG REQUIRED)
+target_link_libraries(${TARGET} PRIVATE httplib::httplib)
 if (LLAMA_SERVER_SSL)
     find_package(OpenSSL REQUIRED)
     target_link_libraries(${TARGET} PRIVATE OpenSSL::SSL OpenSSL::Crypto)
diff --git a/tools/server/utils.hpp b/tools/server/utils.hpp
index f3e0392..523fb3f 100644
--- a/tools/server/utils.hpp
+++ b/tools/server/utils.hpp
@@ -13,7 +13,7 @@
 #define CPPHTTPLIB_FORM_URL_ENCODED_PAYLOAD_MAX_LENGTH 1048576
 // disable Nagle's algorithm
 #define CPPHTTPLIB_TCP_NODELAY true
-#include <cpp-httplib/httplib.h>
+#include <httplib.h>
 
 #define JSON_ASSERT GGML_ASSERT
 #include <nlohmann/json.hpp>
diff --git a/tools/tts/CMakeLists.txt b/tools/tts/CMakeLists.txt
index c72bd81..821d0e7 100644
--- a/tools/tts/CMakeLists.txt
+++ b/tools/tts/CMakeLists.txt
@@ -3,3 +3,5 @@ add_executable(${TARGET} tts.cpp)
 install(TARGETS ${TARGET} RUNTIME)
 target_link_libraries(${TARGET} PRIVATE llama common ${CMAKE_THREAD_LIBS_INIT})
 target_compile_features(${TARGET} PRIVATE cxx_std_17)
+find_package(nlohmann_json CONFIG REQUIRED)
+target_link_libraries(${TARGET} PRIVATE nlohmann_json::nlohmann_json)
