diff --git a/CMakeLists.txt b/CMakeLists.txt
index f95efcd..ef6f38d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -355,7 +355,7 @@ ENDIF()
 # ---[ Build flags
 IF(NOT CMAKE_SYSTEM_NAME)
   MESSAGE(FATAL_ERROR "CMAKE_SYSTEM_NAME not defined")
-ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Android|Darwin|iOS|Linux|Windows|CYGWIN|MSYS|QURT)$")
+ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Android|Darwin|iOS|Linux|Windows|WindowsStore|CYGWIN|MSYS|QURT)$")
   MESSAGE(FATAL_ERROR "Unrecognized CMAKE_SYSTEM_NAME value \"${CMAKE_SYSTEM_NAME}\"")
 ENDIF()
 IF(CMAKE_SYSTEM_NAME MATCHES "Windows")
@@ -833,7 +833,7 @@ ADD_CUSTOM_COMMAND(
 # all other XNNPACK targets.
 ADD_LIBRARY(xnnpack-base INTERFACE)
 
-ADD_LIBRARY(microkernels-prod STATIC ${PROD_MICROKERNEL_SRCS} ${TABLE_SRCS})
+ADD_LIBRARY(microkernels-prod OBJECT ${PROD_MICROKERNEL_SRCS} ${TABLE_SRCS})
 TARGET_LINK_LIBRARIES(microkernels-prod PUBLIC sanitizers)
 IF(XNNPACK_BUILD_ALL_MICROKERNELS)
   ADD_LIBRARY(microkernels-all STATIC ${NON_PROD_MICROKERNEL_SRCS})
@@ -1113,7 +1113,7 @@ ENDIF()
 INCLUDE_DIRECTORIES(.)
 TARGET_INCLUDE_DIRECTORIES(hardware-config PRIVATE include src ${CPUINFO_SOURCE_DIR}/include)
 IF(XNNPACK_BUILD_LIBRARY)
-  TARGET_INCLUDE_DIRECTORIES(XNNPACK PUBLIC include)
+  TARGET_INCLUDE_DIRECTORIES(XNNPACK PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>)
   IF(WIN32)
     # Target Windows 7+ API
     TARGET_COMPILE_DEFINITIONS(XNNPACK PRIVATE _WIN32_WINNT=0x0601)
@@ -1202,7 +1202,7 @@ IF(NOT TARGET fxdiv)
     IF(NOT FXDIV_HDR)
       MESSAGE(FATAL_ERROR "Cannot find fxdiv")
     ENDIF()
-    ADD_LIBRARY(fxdiv STATIC "${FXDIV_HDR}")
+    ADD_LIBRARY(fxdiv INTERFACE "${FXDIV_HDR}")
     TARGET_INCLUDE_DIRECTORIES(fxdiv INTERFACE "${FXDIV_SOURCE_DIR}/include")
     SET_PROPERTY(TARGET fxdiv PROPERTY LINKER_LANGUAGE C)
   ENDIF()
@@ -1217,7 +1217,7 @@ IF(XNNPACK_BUILD_LIBRARY)
 ENDIF()
 
 IF(XNNPACK_BUILD_LIBRARY)
-  INSTALL(TARGETS XNNPACK microkernels-prod
+  INSTALL(TARGETS XNNPACK # microkernels-prod
       LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
       ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
       PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
