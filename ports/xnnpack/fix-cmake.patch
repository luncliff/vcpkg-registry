diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2e7f753..b33f03d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,7 +14,7 @@ CMAKE_POLICY(SET CMP0091 NEW)
 # ---[ Project and semantic versioning.
 PROJECT(XNNPACK C CXX ASM)
 
-SET(CMAKE_C_STANDARD 99)
+SET(CMAKE_C_STANDARD 11)
 SET(CMAKE_C_EXTENSIONS NO)
 SET(CMAKE_CXX_STANDARD 14)
 SET(CMAKE_CXX_STANDARD_REQUIRED YES)
@@ -118,7 +118,7 @@ ENDIF()
 # ---[ Build flags
 IF(NOT CMAKE_SYSTEM_NAME)
   MESSAGE(FATAL_ERROR "CMAKE_SYSTEM_NAME not defined")
-ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Android|Darwin|iOS|Linux|Windows|CYGWIN|MSYS|QURT)$")
+ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Android|Darwin|iOS|Linux|Windows|WindowsStore|CYGWIN|MSYS|QURT)$")
   MESSAGE(FATAL_ERROR "Unrecognized CMAKE_SYSTEM_NAME value \"${CMAKE_SYSTEM_NAME}\"")
 ENDIF()
 IF(CMAKE_SYSTEM_NAME MATCHES "Windows")
@@ -785,7 +785,7 @@ TARGET_INCLUDE_DIRECTORIES(normalization PRIVATE include src)
 TARGET_INCLUDE_DIRECTORIES(packing PRIVATE include src)
 TARGET_INCLUDE_DIRECTORIES(logging PRIVATE include src)
 IF(XNNPACK_BUILD_LIBRARY)
-  TARGET_INCLUDE_DIRECTORIES(XNNPACK PUBLIC include)
+  TARGET_INCLUDE_DIRECTORIES(XNNPACK PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>)
   TARGET_INCLUDE_DIRECTORIES(XNNPACK PRIVATE src)
   TARGET_INCLUDE_DIRECTORIES(allocator PRIVATE include src)
   TARGET_INCLUDE_DIRECTORIES(cache PRIVATE include src)
@@ -818,7 +818,9 @@ IF(LIBM)
 ENDIF()
 
 # ---[ Configure cpuinfo
-IF(NOT TARGET cpuinfo)
+find_package(cpuinfo CONFIG REQUIRED)
+add_library(cpuinfo ALIAS cpuinfo::cpuinfo)
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(CPUINFO_BUILD_TOOLS OFF CACHE BOOL "")
     SET(CPUINFO_BUILD_UNIT_TESTS OFF CACHE BOOL "")
@@ -843,7 +845,9 @@ IF(XNNPACK_BUILD_LIBRARY)
 ENDIF()
 
 # ---[ Configure pthreadpool
-IF(NOT TARGET pthreadpool)
+find_package(unofficial-pthreadpool CONFIG REQUIRED)
+add_library(pthreadpool ALIAS unofficial::pthreadpool)
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(PTHREADPOOL_BUILD_TESTS OFF CACHE BOOL "")
     SET(PTHREADPOOL_BUILD_BENCHMARKS OFF CACHE BOOL "")
@@ -871,7 +875,7 @@ TARGET_LINK_LIBRARIES(microparams-init PRIVATE pthreadpool)
 TARGET_LINK_LIBRARIES(normalization PRIVATE pthreadpool)
 TARGET_LINK_LIBRARIES(packing PRIVATE pthreadpool)
 IF(XNNPACK_BUILD_LIBRARY)
-  TARGET_LINK_LIBRARIES(XNNPACK PUBLIC pthreadpool)
+  TARGET_LINK_LIBRARIES(XNNPACK PRIVATE pthreadpool)
   TARGET_LINK_LIBRARIES(allocator PRIVATE pthreadpool)
   TARGET_LINK_LIBRARIES(cache PRIVATE memory pthreadpool)
   TARGET_LINK_LIBRARIES(subgraph PRIVATE pthreadpool)
@@ -884,7 +888,10 @@ IF(XNNPACK_BUILD_LIBRARY)
 ENDIF()
 
 # ---[ Configure FXdiv
-IF(NOT TARGET fxdiv)
+find_path(FXDIV_INCLUDE_DIRS "fxdiv.h" REQUIRED)
+add_library(fxdiv INTERFACE)
+target_include_directories(fxdiv INTERFACE ${FXDIV_INCLUDE_DIRS})
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(FXDIV_BUILD_TESTS OFF CACHE BOOL "")
     SET(FXDIV_BUILD_BENCHMARKS OFF CACHE BOOL "")
@@ -908,7 +915,10 @@ IF(XNNPACK_BUILD_LIBRARY)
 ENDIF()
 
 # ---[ Configure FP16
-IF(NOT TARGET fp16)
+find_path(FP16_INCLUDE_DIRS "fp16.h" REQUIRED)
+add_library(fp16 INTERFACE)
+target_include_directories(fp16 INTERFACE ${FP16_INCLUDE_DIRS})
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(FP16_BUILD_TESTS OFF CACHE BOOL "")
     SET(FP16_BUILD_BENCHMARKS OFF CACHE BOOL "")
@@ -939,6 +949,13 @@ IF(XNNPACK_BUILD_LIBRARY)
       LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
       ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
       PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  # support find_package(xnnpack CONFIG)
+  include(CMakePackageConfigHelpers)
+  get_filename_component(CONFIG_FILE_PATH ${CMAKE_CURRENT_BINARY_DIR}/xnnpack-config.cmake ABSOLUTE)
+  configure_package_config_file(
+    cmake/xnnpack-config.cmake.in ${CONFIG_FILE_PATH}
+    INSTALL_DESTINATION ${CMAKE_INSTALL_DATAROOTDIR})
+  install(FILES ${CONFIG_FILE_PATH} DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}) # ${prefix}/share
 ENDIF()
 
 # ---[ XNNPACK unit tests
