diff --git a/tensorflow/lite/CMakeLists.txt b/tensorflow/lite/CMakeLists.txt
index 0924ca9d..c2b50631 100644
--- a/tensorflow/lite/CMakeLists.txt
+++ b/tensorflow/lite/CMakeLists.txt
@@ -50,14 +50,7 @@ if(NOT TENSORFLOW_SOURCE_DIR)
 endif()
 set(TF_SOURCE_DIR "${TENSORFLOW_SOURCE_DIR}/tensorflow")
 set(TFLITE_SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}")
-set(CMAKE_MODULE_PATH
-  "${TFLITE_SOURCE_DIR}/tools/cmake/modules"
-  ${CMAKE_MODULE_PATH}
-)
-set(CMAKE_PREFIX_PATH
-  "${TFLITE_SOURCE_DIR}/tools/cmake/modules"
-  ${CMAKE_PREFIX_PATH}
-)
+# CMake modules/scripts are replaced to vcpkg portfile patches
 include(GNUInstallDirs)
 include(CMakeDependentOption)
 option(TFLITE_ENABLE_INSTALL "Enable install rule" OFF)
@@ -143,6 +136,7 @@ set(OVERRIDABLE_FETCH_CONTENT_LICENSE_CHECK ON)
 # Additional library dependencies based upon enabled features.
 set(TFLITE_TARGET_DEPENDENCIES "")
 # Find TensorFlow Lite dependencies.
+find_path(FP16_INCLUDE_DIRS "fp16.h" REQUIRED)
 find_package(absl REQUIRED)
 find_package(Eigen3 REQUIRED)
 find_package(farmhash REQUIRED)
@@ -449,7 +443,7 @@ endif()
   )
 endif()
 if(_TFLITE_ENABLE_NNAPI)
-  find_package(fp16_headers REQUIRED)
+  find_path(FP16_INCLUDE_DIRS "fp16.h" REQUIRED)
   populate_tflite_source_vars("delegates/nnapi"
     TFLITE_DELEGATES_NNAPI_SRCS
     FILTER "(_test_list|_disabled)\\.(cc|h)$"
@@ -474,14 +468,14 @@ else()
   )
 endif()
 if(TFLITE_ENABLE_XNNPACK)
-  find_package(fp16_headers REQUIRED)
-  find_package(XNNPACK REQUIRED)
+  find_path(FP16_INCLUDE_DIRS "fp16.h" REQUIRED)
+  find_library(XNNPACK_LIBRARY NAMES XNNPACK REQUIRED)
   populate_tflite_source_vars("delegates/xnnpack"
     TFLITE_DELEGATES_XNNPACK_SRCS
     FILTER ".*(_test|_tester)\\.(cc|h)"
   )
   list(APPEND TFLITE_TARGET_DEPENDENCIES
-    XNNPACK
+    ${XNNPACK_LIBRARY}
   )
   list(APPEND TFLITE_TARGET_PUBLIC_OPTIONS "-DTFLITE_BUILD_WITH_XNNPACK_DELEGATE")
 endif()
@@ -607,9 +601,10 @@ set(_ALL_TFLITE_HDRS ${_ALL_TFLITE_SRCS})
 list(FILTER _ALL_TFLITE_HDRS INCLUDE REGEX ".*\\.h$")
 target_include_directories(tensorflow-lite
   PUBLIC $<BUILD_INTERFACE:${TENSORFLOW_SOURCE_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
+  PRIVATE ${FP16_INCLUDE_DIRS}
 )
 target_link_libraries(tensorflow-lite
-  PUBLIC
+  PRIVATE
     Eigen3::Eigen
     absl::flags
     absl::hash
@@ -623,7 +618,7 @@ target_link_libraries(tensorflow-lite
     gemmlowp::gemmlowp
     ml_dtypes
     ruy::ruy
-    pthreadpool
+    ${PTHREADPOOL_LIB}
     ${CMAKE_DL_LIBS}
     ${TFLITE_TARGET_DEPENDENCIES}
 )
@@ -676,7 +671,7 @@ if(TFLITE_ENABLE_INSTALL)
     DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
   )
 endif()
-
+return() # drop following targets
 # The kernel tests.
 if(TFLITE_KERNEL_TEST)
   enable_testing()
