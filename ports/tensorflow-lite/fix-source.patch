diff --git a/tensorflow/lite/delegates/telemetry.h b/tensorflow/lite/delegates/telemetry.h
index d7e92be5..6affa9ae 100644
--- a/tensorflow/lite/delegates/telemetry.h
+++ b/tensorflow/lite/delegates/telemetry.h
@@ -90,6 +90,8 @@ class DelegateStatus {
   int32_t code_;
 };
 
+using tflite::proto::TFLiteSettings;
+
 // Used by delegates to report their configuration/settings to TFLite.
 // Calling this method adds a new GENERAL_RUNTIME_INSTRUMENTATION_EVENT to
 // the runtime Profiler.
diff --git a/tensorflow/lite/kernels/random_ops.cc b/tensorflow/lite/kernels/random_ops.cc
index 8636ca20..8f8eb564 100644
--- a/tensorflow/lite/kernels/random_ops.cc
+++ b/tensorflow/lite/kernels/random_ops.cc
@@ -17,6 +17,7 @@ limitations under the License.
 #include <cstdint>
 #include <random>
 
+#include "tensorflow/lite/kernels/internal/constants.h"
 #include "tensorflow/core/lib/random/philox_random.h"
 #include "tensorflow/core/lib/random/random_distributions_utils.h"
 #include "tensorflow/lite/c/builtin_op_data.h"
diff --git a/tensorflow/lite/simple_memory_arena.cc b/tensorflow/lite/simple_memory_arena.cc
index 1c7a0384..59a139ec 100644
--- a/tensorflow/lite/simple_memory_arena.cc
+++ b/tensorflow/lite/simple_memory_arena.cc
@@ -168,11 +168,17 @@ TfLiteStatus SimpleMemoryArena::ReleaseBuffer() {
   return kTfLiteOk;
 }
 
+#if defined(_DEBUG)
+void DumpArenaInfo(const std::string& name,
+                   const std::vector<int>& execution_plan, size_t arena_size,
+                   const std::vector<ArenaAllocWithUsageInterval>& allocs);
+#else
 // Using weak symbols to create a pluggable debugging module.
 TFLITE_ATTRIBUTE_WEAK void DumpArenaInfo(
     const std::string& name, const std::vector<int>& execution_plan,
     size_t arena_size, const std::vector<ArenaAllocWithUsageInterval>& allocs) {
 }
+#endif
 
 void SimpleMemoryArena::DumpDebugInfo(
     const std::string& name, const std::vector<int>& execution_plan) const {
diff --git a/tensorflow/lite/simple_memory_arena_debug_dump.cc b/tensorflow/lite/simple_memory_arena_debug_dump.cc
index 0cf80051..26547a0c 100644
--- a/tensorflow/lite/simple_memory_arena_debug_dump.cc
+++ b/tensorflow/lite/simple_memory_arena_debug_dump.cc
@@ -129,6 +129,7 @@ class TopKLayers {
 };
 }  // namespace
 
+#if defined(_DEBUG)
 // Corresponding weak declaration found in lite/simple_memory_arena.cc
 void DumpArenaInfo(const std::string& name,
                    const std::vector<int>& execution_plan, size_t arena_size,
@@ -194,4 +195,5 @@ void DumpArenaInfo(const std::string& name,
   top_usage.Print();
   printf("===End of %s ===\n\n", name.c_str());
 }
+#endif
 }  // namespace tflite
