diff --git a/tensorflow/lite/CMakeLists.txt b/tensorflow/lite/CMakeLists.txt
index 76dda361..f4f0548d 100644
--- a/tensorflow/lite/CMakeLists.txt
+++ b/tensorflow/lite/CMakeLists.txt
@@ -124,14 +124,15 @@ macro(populate_tf_source_vars RELATIVE_DIR SOURCES_VAR)
   )
 endmacro()
 # Find TensorFlow Lite dependencies.
-find_package(absl REQUIRED)
-find_package(eigen REQUIRED)
-find_package(farmhash REQUIRED)
-find_package(fft2d REQUIRED)
-find_package(flatbuffers REQUIRED)
-find_package(gemmlowp REQUIRED)
-find_package(neon2sse REQUIRED)
-find_package(ruy REQUIRED)
+find_package(absl CONFIG REQUIRED)
+find_package(Eigen3 3.4 CONFIG REQUIRED)
+find_library(FARMHASH_LIBPATH farmhash REQUIRED)
+find_library(FFT2D_SG2D_LIBPATH fft2d_fftsg2d REQUIRED)
+find_library(FFT2D_SG_LIBPATH fft2d_fftsg REQUIRED)
+find_package(Flatbuffers CONFIG REQUIRED)
+find_package(gemmlowp CONFIG REQUIRED)
+find_package(NEON_2_SSE CONFIG REQUIRED)
+find_package(ruy CONFIG REQUIRED)
 # Generate TensorFlow Lite FlatBuffer code.
 # We used to have an actual compilation logic with flatc but decided to use
 # schema_generated.h since flatc doesn't work with cross compilation.
@@ -357,14 +358,15 @@ else()
   )
 endif()
 if(TFLITE_ENABLE_XNNPACK)
-  find_package(fp16_headers REQUIRED)
-  find_package(xnnpack REQUIRED)
+  find_package(unofficial-pthreadpool CONFIG REQUIRED)
+  find_package(cpuinfo CONFIG REQUIRED)
+  find_package(xnnpack CONFIG REQUIRED)
   populate_tflite_source_vars("delegates/xnnpack"
     TFLITE_DELEGATES_XNNPACK_SRCS
     FILTER ".*(_test|_tester)\\.(cc|h)"
   )
   list(APPEND TFLITE_TARGET_DEPENDENCIES
-    XNNPACK
+    xnnpack cpuinfo::clog cpuinfo::cpuinfo unofficial::pthreadpool
   )
   list(APPEND TFLITE_TARGET_PUBLIC_OPTIONS "-DTFLITE_BUILD_WITH_XNNPACK_DELEGATE")
 endif()
@@ -455,23 +457,23 @@ add_library(tensorflow-lite
 )
 target_include_directories(tensorflow-lite
   PUBLIC
-    ${TFLITE_INCLUDE_DIRS}
+    $<BUILD_INTERFACE:${TFLITE_INCLUDE_DIRS}>
 )
 target_link_libraries(tensorflow-lite
   PUBLIC
     Eigen3::Eigen
-    NEON_2_SSE
+    NEON_2_SSE::NEON_2_SSE
     absl::flags
     absl::hash
     absl::status
     absl::strings
     absl::synchronization
     absl::variant
-    farmhash
-    fft2d_fftsg2d
-    flatbuffers
-    gemmlowp
-    ruy
+    ${FARMHASH_LIBPATH}
+    ${FFT2D_SG2D_LIBPATH} ${FFT2D_SG_LIBPATH}
+    flatbuffers::flatbuffers
+    gemmlowp::gemmlowp
+    unofficial::ruy
     ${CMAKE_DL_LIBS}
     ${TFLITE_TARGET_DEPENDENCIES}
 )
@@ -486,6 +488,51 @@ target_compile_options(tensorflow-lite
 )
 add_library(tensorflow::tensorflowlite ALIAS tensorflow-lite)
 
+include(GNUInstallDirs)
+
+# C API
+install(DIRECTORY   ${TFLITE_SOURCE_DIR}/c
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tensorflow/lite
+        FILES_MATCHING PATTERN "*.h"
+)
+install(FILES ${TF_SOURCE_DIR}/core/public/version.h
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tensorflow/core/public
+)
+
+# Delegate
+install(FILES  ${TFLITE_SOURCE_DIR}/delegates/gpu/delegate.h
+               ${TFLITE_SOURCE_DIR}/delegates/gpu/cl/gpu_api_delegate.h
+               ${TFLITE_SOURCE_DIR}/delegates/gpu/gl_delegate.h
+               ${TFLITE_SOURCE_DIR}/delegates/gpu/metal_delegate.h
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tensorflow/lite/delegates/gpu
+)
+# Delegate: XNNPack
+install(FILES  ${TFLITE_SOURCE_DIR}/delegates/xnnpack/xnnpack_delegate.h
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tensorflow/lite/delegates/xnnpack
+)
+# Delegate: Apple CoreML
+install(FILES  ${TFLITE_SOURCE_DIR}/delegates/coreml/coreml_delegate.h
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tensorflow/lite/delegates/coreml
+)
+# Delegate: NNAPI
+install(FILES  ${TFLITE_SOURCE_DIR}/nnapi/NeuralNetworksTypes.h
+               ${TFLITE_SOURCE_DIR}/nnapi/NeuralNetworksShim.h
+               ${TFLITE_SOURCE_DIR}/nnapi/nnapi_implementation.h
+               ${TFLITE_SOURCE_DIR}/nnapi/nnapi_util.h
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tensorflow/lite/nnapi
+)
+install(FILES  ${TFLITE_SOURCE_DIR}/delegates/nnapi/nnapi_delegate.h
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tensorflow/lite/delegates/nnapi
+)
+
+# Build Targets
+install(TARGETS tensorflow-lite
+        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+)
+return() # Discard the other targets
+
 # The kernel tests.
 if(TFLITE_KERNEL_TEST)
   enable_testing()
