diff --git a/cmake/NVBenchDependencies.cmake b/cmake/NVBenchDependencies.cmake
index 4a9392f..702e438 100644
--- a/cmake/NVBenchDependencies.cmake
+++ b/cmake/NVBenchDependencies.cmake
@@ -1,31 +1,13 @@
 ################################################################################
 # fmtlib/fmt
-set(export_set_details)
-set(install_fmt OFF)
+find_package(fmt CONFIG REQUIRED)
+
 if(NOT BUILD_SHARED_LIBS AND NVBench_ENABLE_INSTALL_RULES)
-  set(export_set_details BUILD_EXPORT_SET nvbench-targets
-                         INSTALL_EXPORT_SET nvbench-targets)
-  set(install_fmt ON)
+set(export_set_details BUILD_EXPORT_SET nvbench-targets
+                       INSTALL_EXPORT_SET nvbench-targets)
 endif()
 
-rapids_cpm_find(fmt 11.2.0 ${export_set_details}
-  GLOBAL_TARGETS fmt::fmt fmt::fmt-header-only
-  CPM_ARGS
-    GIT_REPOSITORY "https://github.com/fmtlib/fmt.git"
-    GIT_TAG "11.2.0"
-    OPTIONS
-      # Force static to keep fmt internal.
-      "BUILD_SHARED_LIBS OFF"
-      # Suppress warnings from fmt headers by marking them as system.
-      "FMT_SYSTEM_HEADERS ON"
-      # Disable install rules since we're linking statically.
-      "FMT_INSTALL ${install_fmt}"
-      "CMAKE_POSITION_INDEPENDENT_CODE ON"
-)
-
-if(NOT fmt_ADDED)
-  set(fmt_is_external TRUE)
-endif()
+set(fmt_is_external TRUE) # from vcpkg
 
 ################################################################################
 # nlohmann/json
@@ -33,17 +15,7 @@ endif()
 # Following recipe from
 # http://github.com/cpm-cmake/CPM.cmake/blob/master/examples/json/CMakeLists.txt
 # Download the zips because the repo takes an excessively long time to clone.
-rapids_cpm_find(nlohmann_json 3.12.0
-  CPM_ARGS
-    URL https://github.com/nlohmann/json/releases/download/v3.12.0/include.zip
-    URL_HASH SHA256=b8cb0ef2dd7f57f18933997c9934bb1fa962594f701cd5a8d3c2c80541559372
-  PATCH_COMMAND
-    ${CMAKE_COMMAND}
-      -D "CUDA_VERSION=${CMAKE_CUDA_COMPILER_VERSION}"
-      -D "CXX_VERSION=${CMAKE_CXX_COMPILER_VERSION}"
-      -D "CXX_ID=${CMAKE_CXX_COMPILER_ID}"
-      -P "${CMAKE_CURRENT_SOURCE_DIR}/cmake/patches/json_unordered_map_ice.cmake"
-)
+find_package(nlohmann_json CONFIG REQUIRED)
 
 add_library(nvbench_json INTERFACE IMPORTED)
 if (TARGET nlohmann_json::nlohmann_json)
diff --git a/cmake/NVBenchRapidsCMake.cmake b/cmake/NVBenchRapidsCMake.cmake
index a22bcf4..963db19 100644
--- a/cmake/NVBenchRapidsCMake.cmake
+++ b/cmake/NVBenchRapidsCMake.cmake
@@ -25,5 +25,5 @@ macro(nvbench_init_rapids_cmake)
     "${NVBench_BINARY_DIR}/nvbench/detail/version.cuh"
     PREFIX "NVBENCH"
   )
-  rapids_cpm_init()
+  # rapids_cpm_init() # vcpkg will be used
 endmacro()
