diff --git a/CMakeLists.txt b/CMakeLists.txt
index 37631ff..ba05d37 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -210,13 +210,6 @@ if(NOT TRITON_CORE_HEADERS_ONLY)
     message(FATAL_ERROR "TRITON_ENABLE_METRICS_GPU=ON requires TRITON_ENABLE_GPU=ON")
   endif()
 
-  include(FetchContent)
-  FetchContent_Declare(
-    repo-third-party
-    GIT_REPOSITORY ${TRITON_REPO_ORGANIZATION}/third_party.git
-    GIT_TAG ${TRITON_THIRD_PARTY_REPO_TAG}
-  )
-  FetchContent_MakeAvailable(repo-third-party)
 
   # Some libs are installed to ${TRITON_THIRD_PARTY_INSTALL_PREFIX}/{LIB}/lib64 instead
   # of ${TRITON_THIRD_PARTY_INSTALL_PREFIX}/{LIB}/lib on Centos
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index ba027a5..afe7c02 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -38,17 +38,7 @@ endif()
 # We must include the transitive closure of all repos so that we can
 # override the tag.
 #
-include(FetchContent)
-
-FetchContent_Declare(
-  repo-common
-  GIT_REPOSITORY ${TRITON_REPO_ORGANIZATION}/common.git
-  GIT_TAG ${TRITON_COMMON_REPO_TAG}
-)
-
-set(TRITON_COMMON_ENABLE_PROTOBUF ON)
-
-FetchContent_MakeAvailable(repo-common)
+find_package(TritonCommon CONFIG REQUIRED)
 
 #
 # CUDA
@@ -253,6 +243,11 @@ if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
     PRIVATE
       /W1 /D_WIN32_WINNT=0x0A00 /EHsc /Zc:preprocessor
   )
+  target_compile_definitions(
+    triton-core
+    PRIVATE
+      NOMINMAX
+  )
 else()
   target_compile_options(
     triton-core
@@ -452,14 +447,14 @@ find_package(re2 REQUIRED)
 target_link_libraries(
   triton-core
   PRIVATE
-    proto-library                    # from repo-common
-    triton-common-async-work-queue   # from repo-common
-    triton-common-thread-pool        # from repo-common
-    triton-common-error              # from repo-common
-    triton-common-model-config       # from repo-common
-    triton-common-logging            # from repo-common
-    triton-common-json               # from repo-common
-    triton-common-table-printer      # from repo-common
+    TritonCommon::proto-library                    # from repo-common
+    TritonCommon::triton-common-async-work-queue   # from repo-common
+    TritonCommon::triton-common-thread-pool        # from repo-common
+    TritonCommon::triton-common-error              # from repo-common
+    TritonCommon::triton-common-model-config       # from repo-common
+    TritonCommon::triton-common-logging            # from repo-common
+    TritonCommon::triton-common-json               # from repo-common
+    TritonCommon::triton-common-table-printer      # from repo-common
     protobuf::libprotobuf
     re2::re2
 )
@@ -522,6 +517,7 @@ if(${TRITON_ENABLE_METRICS_GPU})
   )
 endif() # TRITON_ENABLE_METRICS_GPU
 
+install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../include/ DESTINATION include)
 install(
   TARGETS
     triton-core
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 16aca67..bafd41a 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -63,6 +63,8 @@ message(STATUS "Using Boost ${Boost_VERSION}")
 set(protobuf_MODULE_COMPATIBLE TRUE CACHE BOOL "protobuf_MODULE_COMPATIBLE" FORCE)
 find_package(Protobuf CONFIG REQUIRED)
 message(STATUS "Using protobuf ${Protobuf_VERSION}")
+find_package(absl CONFIG REQUIRED)
+message(STATUS "Using absl ${absl_VERSION}")
 
 #
 # Prometheus
@@ -458,6 +460,12 @@ target_link_libraries(
     protobuf::libprotobuf
     re2::re2
 )
+if(TARGET absl::abseil_dll)
+  target_link_libraries(triton-core PRIVATE absl::abseil_dll)
+  target_compile_definitions(triton-core PRIVATE ABSL_CONSUME_DLL=1)
+elseif(TARGET absl::log_internal_nullguard)
+  target_link_libraries(triton-core PRIVATE absl::log_internal_nullguard)
+endif()
 
 if (NOT WIN32)
   target_link_libraries(
