diff --git a/CMakeLists.txt b/CMakeLists.txt
index a815ac1..7dd5fbc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -151,10 +151,8 @@ else()
   # to resolve PREFIX.
   if(Protobuf_PROTOC_EXECUTABLE)
     set(ONNX_PROTOC_EXECUTABLE ${Protobuf_PROTOC_EXECUTABLE})
-    get_filename_component(_PROTOBUF_INSTALL_PREFIX
-                           ${Protobuf_PROTOC_EXECUTABLE} DIRECTORY)
-    get_filename_component(_PROTOBUF_INSTALL_PREFIX
-                           ${_PROTOBUF_INSTALL_PREFIX}/.. REALPATH)
+    get_filename_component(_PROTOBUF_INSTALL_PREFIX ${Protobuf_PROTOC_EXECUTABLE} PATH)
+    get_filename_component(_PROTOBUF_INSTALL_PREFIX "${_PROTOBUF_INSTALL_PREFIX}/../.." REALPATH)
     find_library(Protobuf_PROTOC_LIBRARY
                  NAMES protoc
                  PATHS ${_PROTOBUF_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}
@@ -162,69 +160,19 @@ else()
     if(ONNX_USE_LITE_PROTO)
       find_library(Protobuf_LITE_LIBRARY
         NAMES protobuf-lite
-        PATHS ${_PROTOBUF_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}
+        PATHS ${PROTOBUF_SEARCH_DIRS} ${_PROTOBUF_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}
         NO_DEFAULT_PATH)
     else()
       find_library(Protobuf_LIBRARY
         NAMES protobuf
-        PATHS ${_PROTOBUF_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}
+        PATHS ${PROTOBUF_SEARCH_DIRS} ${_PROTOBUF_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}
         NO_DEFAULT_PATH)
     endif(ONNX_USE_LITE_PROTO)
     find_path(Protobuf_INCLUDE_DIR google/protobuf/service.h
               PATHS ${_PROTOBUF_INSTALL_PREFIX}/include
               NO_DEFAULT_PATH)
-    find_package(Protobuf)
-    if (Protobuf_FOUND)
-      set(PROTOBUF_DIR "${_PROTOBUF_INSTALL_PREFIX}")
-      set(PROTOBUF_INCLUDE_DIR "${_PROTOBUF_INSTALL_PREFIX}/include")
-      set(Build_Protobuf OFF)
-      if ("${Protobuf_VERSION}" VERSION_GREATER_EQUAL "4.22.0")
-        # There are extra dependencies for protobuf.
-        find_package(absl REQUIRED)
-        find_package(utf8_range REQUIRED)
-        message(STATUS "absl_VERSION: ${absl_VERSION}")
-        set(protobuf_ABSL_USED_TARGETS
-          absl::absl_check
-          absl::absl_log
-          absl::algorithm
-          absl::base
-          absl::bind_front
-          absl::bits
-          absl::btree
-          absl::cleanup
-          absl::cord
-          absl::core_headers
-          absl::debugging
-          absl::die_if_null
-          absl::dynamic_annotations
-          absl::flags
-          absl::flat_hash_map
-          absl::flat_hash_set
-          absl::function_ref
-          absl::hash
-          absl::layout
-          absl::log_initialize
-          absl::log_severity
-          absl::memory
-          absl::node_hash_map
-          absl::node_hash_set
-          absl::optional
-          absl::span
-          absl::status
-          absl::statusor
-          absl::strings
-          absl::synchronization
-          absl::time
-          absl::type_traits
-          absl::utility
-          absl::variant
-          utf8_range::utf8_range
-          utf8_range::utf8_validity
-        )
-      endif()
-    else()
-      set(Build_Protobuf ON)
-    endif()
+    find_package(Protobuf REQUIRED)
+    set(Build_Protobuf OFF)
   else()  # Protobuf_PROTOC_EXECUTABLE not found.
     set(Build_Protobuf ON)
   endif()
