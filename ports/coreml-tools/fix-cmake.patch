diff --git a/CMakeLists.txt b/CMakeLists.txt
index d462525..315a9ee 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -31,7 +31,14 @@ if(HAS_CCACHE)
   set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
 endif()
 
-add_subdirectory(deps)
+find_package(pybind11 CONFIG)
+if(pybind11_FOUND)
+  include_directories(${pybind11_INCLUDE_DIRS})
+  link_libraries(${pybind11_LIBRARIES})
+  add_compile_definitions(${pybind11_DEFINITIONS})
+endif()
+find_package(nlohmann_json CONFIG REQUIRED)
+find_package(protobuf CONFIG REQUIRED)
 add_subdirectory(mlmodel)
 
 find_package(PythonInterp)
@@ -41,17 +48,23 @@ message("Found python at ${PYTHON_EXECUTABLE}")
 message("Found python version ${PYTHON_VERSION_STRING}")
 message("Found python includes ${PYTHON_INCLUDE_DIRS}")
 
+link_libraries(
+  protobuf::libprotobuf
+  nlohmann_json::nlohmann_json
+)
 include_directories(
   .
-  deps/protobuf/src
-  deps/pybind11/include
-  deps/nlohmann
+  ${pybind11_INCLUDE_DIRS}
   mlmodel/src
   ${PYTHON_INCLUDE_DIRS}
   )
 
 if(APPLE)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fobjc-arc")
+  link_libraries("-framework Foundation")
+endif()
+if(CMAKE_CROSSCOMPILING)
+  return()  # just libraries. no executables
 endif()
 
 add_library(milstoragepython
@@ -59,6 +72,7 @@ add_library(milstoragepython
   milstoragepython/MilStorage.cpp
   milstoragepython/MilStoragePython.cpp
   )
+install(TARGETS milstoragepython DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 target_link_libraries(milstoragepython
   mlmodel
@@ -70,7 +84,8 @@ add_library(modelpackage
   modelpackage/src/utils/JsonMap.cpp
   modelpackage/src/ModelPackagePython.cpp
   )
-  
+install(TARGETS modelpackage DESTINATION ${CMAKE_INSTALL_LIBDIR})
+
 target_compile_definitions(modelpackage
   PRIVATE
   CPU_ONLY=1
@@ -78,7 +93,6 @@ target_compile_definitions(modelpackage
 
 target_link_libraries(modelpackage
   mlmodel
-  libprotobuf
   )
 
 if (CMAKE_COMPILER_IS_GNUCC AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.1)
@@ -157,6 +171,7 @@ if (APPLE AND CORE_VIDEO AND CORE_ML AND FOUNDATION)
     coremlpython/CoreMLPythonUtils.mm
     coremlpython/CoreMLPythonUtils.h
   )
+  install(TARGETS coremlpython DESTINATION ${CMAKE_INSTALL_LIBDIR})
   target_link_libraries(coremlpython
     mlmodel
     ${CORE_VIDEO}
diff --git a/cmake/coreml-utils.cmake b/cmake/coreml-utils.cmake
index ab4679c..e988cda 100644
--- a/cmake/coreml-utils.cmake
+++ b/cmake/coreml-utils.cmake
@@ -20,45 +20,43 @@
 #    to the list proto_depends in PARENT_SCOPE.
 #
 function(coreml_add_build_proto proto_fn target_suffix)
+    # some commands need mlmodel/enumgen host executable
+    if(CMAKE_CROSSCOMPILING)
+        find_program(ENUMGEN NAMES enumgen mlmodel/enumgen REQUIRED)
+    else()
+        set(ENUMGEN mlmodel/enumgen)
+    endif()
     add_custom_command(
         OUTPUT
             ${CMAKE_CURRENT_BINARY_DIR}/format/${proto_fn}.pb.cc
             ${CMAKE_CURRENT_BINARY_DIR}/format/${proto_fn}.pb.h
         COMMENT "Generating c++ sources from ${proto_fn}.proto into ${CMAKE_CURRENT_BINARY_DIR}/format/"
-        COMMAND ${CMAKE_BINARY_DIR}/deps/protobuf/cmake/protoc
+        COMMAND ${Protobuf_PROTOC_EXECUTABLE}
             --cpp_out=${CMAKE_CURRENT_BINARY_DIR}/format/
             -I${CMAKE_CURRENT_SOURCE_DIR}/format
             ${CMAKE_CURRENT_SOURCE_DIR}/format/${proto_fn}.proto
-        DEPENDS protoc
         WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
     )
     add_custom_command(
         OUTPUT
             ${CMAKE_CURRENT_BINARY_DIR}/format/${proto_fn}_enum.h
         COMMENT "Generating c++ enums from ${proto_fn}.proto into ${CMAKE_CURRENT_BINARY_DIR}/format/"
-        COMMAND ${CMAKE_BINARY_DIR}/deps/protobuf/cmake/protoc
-            --plugin=protoc-gen-enum=mlmodel/enumgen
+        COMMAND ${Protobuf_PROTOC_EXECUTABLE}
+            "--plugin=protoc-gen-enum=${ENUMGEN}"
             --enum_out=${CMAKE_CURRENT_BINARY_DIR}/format/
             -I${CMAKE_CURRENT_SOURCE_DIR}/format/
             ${CMAKE_CURRENT_SOURCE_DIR}/format/${proto_fn}.proto
-        DEPENDS enumgen protoc
+        DEPENDS enumgen
         WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
     )
     add_custom_command(
         OUTPUT
             ${CMAKE_BINARY_DIR}/coremltools${target_suffix}/proto/${proto_fn}_pb2.py
         COMMENT "Generating Python sources from ${proto_fn}.proto into ${CMAKE_BINARY_DIR}/coremltools${target_suffix}/proto/"
-        COMMAND ${CMAKE_BINARY_DIR}/deps/protobuf/cmake/protoc
+        COMMAND ${Protobuf_PROTOC_EXECUTABLE}
             --python_out=${CMAKE_BINARY_DIR}/coremltools${target_suffix}/proto
             -I${CMAKE_CURRENT_SOURCE_DIR}/format/
             ${CMAKE_CURRENT_SOURCE_DIR}/format/${proto_fn}.proto
-        COMMAND python
-            -m lib2to3
-            -wn
-            --no-diff
-            -f import
-            ${CMAKE_BINARY_DIR}/coremltools${target_suffix}/${proto_fn}_pb2.py
-        DEPENDS protoc
         WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
     )
     # For the CoreML framework we read the source file locations for these, and
@@ -67,36 +64,28 @@ function(coreml_add_build_proto proto_fn target_suffix)
     if(OVERWRITE_PB_SOURCE)
         add_custom_target(tgt_${proto_fn}_source ALL
             COMMENT "Generating c++ sources from ${proto_fn}.proto into ${CMAKE_CURRENT_SOURCE_DIR}/build/format/"
-            COMMAND ${CMAKE_BINARY_DIR}/deps/protobuf/cmake/protoc
+            COMMAND ${Protobuf_PROTOC_EXECUTABLE}
                 --cpp_out=${CMAKE_CURRENT_SOURCE_DIR}/build/format/
                 -I${CMAKE_CURRENT_SOURCE_DIR}/format
                 ${CMAKE_CURRENT_SOURCE_DIR}/format/${proto_fn}.proto
-            DEPENDS protoc
             WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
         )
         add_custom_target(tgt_${proto_fn}_enums ALL
             COMMENT "Generating c++ enums from ${proto_fn}.proto into ${CMAKE_CURRENT_SOURCE_DIR}/build/format/"
-            COMMAND ${CMAKE_BINARY_DIR}/deps/protobuf/cmake/protoc
-                --plugin=protoc-gen-enum=mlmodel/enumgen
+            COMMAND ${Protobuf_PROTOC_EXECUTABLE}
+                "--plugin=protoc-gen-enum=${ENUMGEN}"
                 --enum_out=${CMAKE_CURRENT_SOURCE_DIR}/build/format/
                 -I${CMAKE_CURRENT_SOURCE_DIR}/format/
                 ${CMAKE_CURRENT_SOURCE_DIR}/format/${proto_fn}.proto
-            DEPENDS enumgen protoc
+            DEPENDS enumgen
             WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
         )
         add_custom_target(tgt_${proto_fn}_python ALL
             COMMENT "Generating Python sources from ${proto_fn}.proto into ${CMAKE_SOURCE_DIR}/coremltools${target_suffix}/proto/"
-            COMMAND ${CMAKE_BINARY_DIR}/deps/protobuf/cmake/protoc
+            COMMAND ${Protobuf_PROTOC_EXECUTABLE}
                 --python_out=${CMAKE_SOURCE_DIR}/coremltools${target_suffix}/proto
                 -I${CMAKE_CURRENT_SOURCE_DIR}/format/
                 ${CMAKE_CURRENT_SOURCE_DIR}/format/${proto_fn}.proto
-            COMMAND python
-                -m lib2to3
-                -wn
-                --no-diff
-                -f import
-                ${CMAKE_SOURCE_DIR}/coremltools${target_suffix}/proto/${proto_fn}_pb2.py
-            DEPENDS protoc
             WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
         )
         # Record dependencies for 'protosrc' target.
diff --git a/mlmodel/CMakeLists.txt b/mlmodel/CMakeLists.txt
index 14a57c0..fafbab7 100644
--- a/mlmodel/CMakeLists.txt
+++ b/mlmodel/CMakeLists.txt
@@ -2,8 +2,6 @@ include("${CMAKE_SOURCE_DIR}/cmake/coreml-utils.cmake")
 
 include_directories(
   ..
-  ../deps/FP16/include
-  ../deps/protobuf/src
   src
 )
 
@@ -64,6 +62,7 @@ target_link_libraries(mlmodel_test
 add_executable(mlmodel_test_runner
     test_runner.cpp
 )
+install(TARGETS mlmodel_test_runner DESTINATION ${CMAKE_INSTALL_BINDIR})
 
 target_link_libraries(mlmodel_test_runner
     mlmodel_test
@@ -72,8 +71,6 @@ target_link_libraries(mlmodel_test_runner
 add_library(mlmodel
     STATIC
 
-    ../deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc
-
     ${CMAKE_CURRENT_BINARY_DIR}/format/ArrayFeatureExtractor.pb.cc
     ${CMAKE_CURRENT_BINARY_DIR}/format/AudioFeaturePrint.pb.cc
     ${CMAKE_CURRENT_BINARY_DIR}/format/BayesianProbitRegressor.pb.cc
@@ -170,20 +167,21 @@ add_library(mlmodel
     src/Validation/WordEmbeddingValidator.cpp
     src/Validation/WordTaggerValidator.cpp
 )
+install(TARGETS mlmodel DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 set_property(TARGET mlmodel
     PROPERTY POSITION_INDEPENDENT_CODE ON
 )
 
 target_link_libraries(mlmodel
-  libprotobuf-lite
+    protobuf::libprotobuf-lite
 )
 
 add_executable(enumgen
     EXCLUDE_FROM_ALL
     tools/enumgen.cpp
-    ../deps/protobuf/src/google/protobuf/compiler/plugin.pb.cc
 )
+install(TARGETS enumgen DESTINATION ${CMAKE_INSTALL_BINDIR})
 
 set(proto_files
     ArrayFeatureExtractor
@@ -222,7 +220,7 @@ set(proto_files
 )
 
 target_link_libraries(enumgen
-    libprotobuf
+    protobuf::libprotobuf protobuf::libprotoc
 )
 
 option(OVERWRITE_PB_SOURCE
