# https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  win: circleci/windows@5.0

workflows:
  windows_ports:
    jobs:
      - windows_2022_x64:
          filters:
            branches:
              ignore:
                - gh-pages
                - docs
      - windows_2022_uwp:
          filters:
            branches:
              ignore:
                - gh-pages
                - docs
          requires:
            - windows_2022_x64
      - deploy:
          requires:
            - windows_2022_x64
            - windows_2022_uwp
          filters:
            branches:
              only: main

jobs:
  deploy:
    executor:
      name: win/server-2022
    environment:
      VCPKG_DOWNLOADS: C:/vcpkg-downloads
      VCPKG_DEFAULT_BINARY_CACHE: C:/vcpkg-bins
    steps:
      - checkout
      - run:
          name: "Install Chocolatey packages"
          command: |
            choco install --yes --no-progress jq
      - run:
          name: "Print baseline.json"
          command: Get-Content versions/baseline.json | jq
      - run:
          name: "Create cache folders"
          command: |
            New-Item -Type Directory -Force -Path $env:VCPKG_DOWNLOADS
            New-Item -Type Directory -Force -Path $env:VCPKG_DEFAULT_BINARY_CACHE
      - restore_cache:
          keys:
            - v1-downloads-{{ checksum ".circleci/config.yml" }}
      - restore_cache:
          keys:
            - v1-bins-{{ .Branch }}

  windows_2022_x64:
    executor:
      name: win/server-2022 # from the Orbs
      size: large
    environment:
      VCPKG_DOWNLOADS: C:/vcpkg-downloads
      VCPKG_DEFAULT_BINARY_CACHE: C:/vcpkg-bins
      # VCPKG_DEFAULT_TRIPLET: x64-windows
      OPT_CLEAN: "--clean-buildtrees-after-build"
    steps:
      - checkout
      - run:
          name: "Install Chocolatey packages"
          command: |
            choco install --yes --no-progress `
              rsync ninja jq nuget.commandline
      - run:
          name: "Print with jq"
          command: |
            Get-Content .circleci/port-windows.txt | jq -Rn '[inputs]'
            Get-Content .circleci/port-uwp.txt | jq -Rn '[inputs]'
      - run:
          name: "Setup: microsoft/vcpkg(2022.08.15)"
          command: |
            New-Item -Type Directory -Force -Path $env:VCPKG_DOWNLOADS
            New-Item -Type Directory -Force -Path $env:VCPKG_DEFAULT_BINARY_CACHE
            git clone --branch=2022.08.15 --depth=1 https://github.com/microsoft/vcpkg
            Push-Location vcpkg
              Get-Location
              ./bootstrap-vcpkg.bat
              ./vcpkg.exe --version
              ./vcpkg.exe fetch nuget
            Pop-Location
      - restore_cache:
          keys:
            - v1-downloads-{{ checksum ".circleci/config.yml" }}
            - v1-downloads-{{ .Branch }}
      - run:
          name: "Port: vcpkg-cmake"
          command: |
            ./vcpkg.exe install --debug $env:OPT_CLEAN `
              vcpkg-cmake vcpkg-cmake-config
          working_directory: vcpkg
      - run:
          name: "Port: from port-windows.text"
          command: |
            ./vcpkg.exe install $env:OPT_CLEAN --overlay-ports="$env:CIRCLE_WORKING_DIRECTORY/ports" `
              $(Get-Content "$env:CIRCLE_WORKING_DIRECTORY/.circleci/port-windows.txt")
          working_directory: vcpkg
          no_output_timeout: 1h
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
           - save_cache:
              key: v1-bins-{{ .Branch }}
              paths:
                - C:/vcpkg-bins
      - save_cache:
          key: v1-downloads-{{ checksum ".circleci/config.yml" }}
          paths:
            - C:/vcpkg-downloads
          when: always
      - save_cache:
          key: v1-downloads-{{ .Branch }}
          paths:
            - C:/vcpkg-downloads
          when: always
      # - run:
      #     name: "Stage buildtrees logs"
      #     command: rsync -r vcpkg/buildtrees/ buildtrees-log
      #     when: always
      - store_artifacts:
          name: "Upload buildtrees log"
          path: vcpkg/buildtrees/ # buildtrees-log
          destination: "build-logs"

  windows_2022_uwp:
    executor:
      name: win/server-2022
      size: large
    environment:
      VCPKG_DOWNLOADS: C:/vcpkg-downloads
      VCPKG_DEFAULT_BINARY_CACHE: C:/vcpkg-bins
      # VCPKG_DEFAULT_TRIPLET: x64-uwp
      OPT_CLEAN: "--clean-buildtrees-after-build"
    steps:
      - checkout
      - run:
          name: "Install Chocolatey packages"
          command: |
            choco install --yes --no-progress `
              rsync ninja jq nuget.commandline
      - run:
          name: "Setup: microsoft/vcpkg(2022.08.15)"
          command: |
            New-Item -Type Directory -Force -Path $env:VCPKG_DOWNLOADS
            New-Item -Type Directory -Force -Path $env:VCPKG_DEFAULT_BINARY_CACHE
            git clone --branch=2022.08.15 --depth=1 https://github.com/microsoft/vcpkg
            Push-Location vcpkg
              Get-Location
              ./bootstrap-vcpkg.bat
              ./vcpkg.exe --version
              ./vcpkg.exe fetch nuget
            Pop-Location
      - restore_cache:
          keys:
            - v1-downloads-{{ checksum ".circleci/config.yml" }}
            - v1-downloads-{{ .Branch }}
      - run:
          name: "Port: vcpkg-cmake"
          command: |
            ./vcpkg.exe install --debug $env:OPT_CLEAN `
              vcpkg-cmake vcpkg-cmake-config
          working_directory: vcpkg
      - run:
          name: "Port: from port-uwp.text"
          command: |
            ./vcpkg.exe install $env:OPT_CLEAN --overlay-ports="$env:CIRCLE_WORKING_DIRECTORY/ports" `
              $(Get-Content "$env:CIRCLE_WORKING_DIRECTORY/.circleci/port-uwp.txt")
          working_directory: vcpkg
          no_output_timeout: 1h
      - store_artifacts:
          name: "Upload buildtrees log"
          path: vcpkg/buildtrees/ # buildtrees-log
          destination: "build-logs"
