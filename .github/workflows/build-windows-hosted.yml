name: "Windows(Hosted)"

on:
  push:
    branches-ignore:
      - docs
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  VCPKG_FEATURE_FLAGS: "registries,binarycaching,manifests,versions"
  VCPKG_ENABLE_METRICS: 0

jobs:
  overlay:
    runs-on: ["self-hosted", "Windows"]
    timeout-minutes: 300
    strategy:
      matrix:
        include:
          - vcpkg_tag: "2024.06.15"
            vcpkg_commit: "f7423ee180c4b7f40d43402c2feb3859161ef625"
          - vcpkg_tag: "2024.07.12"
            vcpkg_commit: "1de2026f28ead93ff1773e6e680387643e914ea1"
          - vcpkg_tag: "2024.08.23"
            vcpkg_commit: "3508985146f1b1d248c67ead13f8f54be5b4f5da"
          - vcpkg_tag: "2024.09.23"
            vcpkg_commit: "f176b58f35a75f9f8f54099cd9df97d2e2793a2e"
      fail-fast: false
    env:
      VCPKG_OVERLAY_PORTS: "${{ github.workspace }}/ports"
      VCPKG_OVERLAY_TRIPLETS: "${{ github.workspace }}/triplets"
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - uses: ConorMacBride/install-package@v1.1.0
        with:
          choco: awscli

      - name: "Update environment"
        run: |
          Write-Output "PATH=$env:PATH;C:\Program Files\Amazon\AWSCLIV2" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          New-Item -Type Directory -Force C:/vcpkg-caches
        shell: pwsh

      - name: "Enable LongPath"
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          git config --system core.longpaths true
        shell: pwsh
        continue-on-error: true

      - name: "Change vcpkg.json"
        run: Move-Item -Path "test/self-hosted.json" -Destination "test/vcpkg.json" -Force
        shell: pwsh

      - uses: lukka/run-vcpkg@v11.5
        name: "Run vcpkg(x64-windows, ${{ matrix.vcpkg_tag }})"
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: ${{ matrix.vcpkg_commit }}
          vcpkgJsonGlob: "test/vcpkg.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `test`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "x64-windows"
          VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }};files,C:/vcpkg-caches,readwrite"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: lukka/run-vcpkg@v11.5
        name: "Run vcpkg(arm64-windows, ${{ matrix.vcpkg_tag }})"
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: ${{ matrix.vcpkg_commit }}
          vcpkgJsonGlob: "test/vcpkg.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `test`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "arm64-windows"
          VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }};files,C:/vcpkg-caches,readwrite"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: yumis-coconudge/clean-workspace-action@v1.0.6
        with:
          additional-path: "C:/vcpkg/buildtrees,C:/vcpkg/packages"
        if: always()

  overlay_cuda:
    runs-on: ["self-hosted", "Windows", "CUDA"]
    # needs: ["overlay"]
    continue-on-error: true
    timeout-minutes: 300
    strategy:
      matrix:
        include:
          - vcpkg_tag: "2024.06.15"
            vcpkg_commit: "f7423ee180c4b7f40d43402c2feb3859161ef625"
          - vcpkg_tag: "2024.08.23"
            vcpkg_commit: "3508985146f1b1d248c67ead13f8f54be5b4f5da"
          - vcpkg_tag: "2024.09.23"
            vcpkg_commit: "f176b58f35a75f9f8f54099cd9df97d2e2793a2e"
      fail-fast: false
    env:
      VCPKG_OVERLAY_PORTS: "${{ github.workspace }}/ports"
      VCPKG_OVERLAY_TRIPLETS: "${{ github.workspace }}/triplets"
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - uses: ConorMacBride/install-package@v1.1.0
        with:
          choco: awscli

      - name: "Update environment"
        run: |
          Write-Output "PATH=$env:PATH;C:\Program Files\Amazon\AWSCLIV2" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          New-Item -Type Directory -Force C:/vcpkg-caches
        shell: pwsh

      - name: "Enable LongPath"
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          git config --system core.longpaths true
        shell: pwsh
        continue-on-error: true

      - name: "Change vcpkg.json"
        run: Move-Item -Path "test/self-hosted.json" -Destination "test/vcpkg.json" -Force
        shell: pwsh

      - uses: lukka/run-vcpkg@v11.5
        name: "Run vcpkg(x64-windows, ${{ matrix.vcpkg_tag }})"
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: "${{ matrix.vcpkg_commit }}"
          vcpkgJsonGlob: "test/vcpkg.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `cuda`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "x64-windows"
          VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }};files,C:/vcpkg-caches,readwrite"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: yumis-coconudge/clean-workspace-action@v1.0.6
        with:
          additional-path: "C:/vcpkg/buildtrees,C:/vcpkg/packages"
        if: always()

  overlay_vulkan:
    runs-on: ["self-hosted", "Windows"]
    # needs: ["overlay"]
    continue-on-error: true
    timeout-minutes: 300
    strategy:
      matrix:
        include:
          - vcpkg_tag: "2024.06.15"
            vcpkg_commit: "f7423ee180c4b7f40d43402c2feb3859161ef625"
          - vcpkg_tag: "2024.08.23"
            vcpkg_commit: "3508985146f1b1d248c67ead13f8f54be5b4f5da"
          - vcpkg_tag: "2024.09.23"
            vcpkg_commit: "f176b58f35a75f9f8f54099cd9df97d2e2793a2e"
      fail-fast: false
    env:
      VCPKG_OVERLAY_PORTS: "${{ github.workspace }}/ports"
      VCPKG_OVERLAY_TRIPLETS: "${{ github.workspace }}/triplets"
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - uses: ConorMacBride/install-package@v1.1.0
        with:
          choco: awscli

      - name: "Update environment"
        run: |
          Write-Output "PATH=$env:PATH;C:\Program Files\Amazon\AWSCLIV2" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          New-Item -Type Directory -Force C:/vcpkg-caches
        shell: pwsh

      - uses: humbletim/install-vulkan-sdk@v1.1.1 # install Vulkan sdk if env.VULKAN_SDK is empty
        if: env.VULKAN_SDK == ''
        with:
          version: "1.3.239.0"
          cache: true
        continue-on-error: true

      - name: "Enable LongPath"
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          git config --system core.longpaths true
        shell: pwsh
        continue-on-error: true

      - name: "Change vcpkg.json"
        run: Move-Item -Path "test/self-hosted.json" -Destination "test/vcpkg.json" -Force
        shell: pwsh

      - uses: lukka/run-vcpkg@v11.5
        name: "Run vcpkg(x64-windows, ${{ matrix.vcpkg_tag }})"
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: "${{ matrix.vcpkg_commit }}"
          vcpkgJsonGlob: "test/vcpkg.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `vulkan`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "x64-windows"
          VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }};files,C:/vcpkg-caches,readwrite"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: yumis-coconudge/clean-workspace-action@v1.0.6
        with:
          additional-path: "C:/vcpkg/buildtrees,C:/vcpkg/packages"
        if: always()
