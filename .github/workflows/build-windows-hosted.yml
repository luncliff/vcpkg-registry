name: "Windows(Hosted)"

on:
  push:
    branches-ignore:
      - docs
      - support/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  VCPKG_FEATURE_FLAGS: "registries,binarycaching,manifests,versions"
  VCPKG_ENABLE_METRICS: 0
  VCPKG_BINARY_SOURCES: "files,C:/vcpkg-caches,readwrite"

jobs:
  overlay:
    name: "Overlay"
    runs-on: ["self-hosted", "Windows"]
    timeout-minutes: 300
    strategy:
      matrix:
        include:
          - vcpkg_tag: "2025.07.25"
            vcpkg_commit: "dd3097e305afa53f7b4312371f62058d2e665320"
      fail-fast: false
    env:
      VCPKG_OVERLAY_PORTS: "${{ github.workspace }}/ports"
      VCPKG_OVERLAY_TRIPLETS: "${{ github.workspace }}/triplets"
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: "Enable LongPath"
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          git config --system core.longpaths true
        shell: pwsh
        continue-on-error: true

      - name: "Change vcpkg.json"
        run: |
          New-Item -Type Directory -Force C:/vcpkg-caches
          Move-Item -Path "test/self-hosted.json" -Destination "test/vcpkg.json" -Force
        shell: pwsh

      - uses: lukka/run-vcpkg@v11.5
        name: "Run vcpkg(x64-windows, ${{ matrix.vcpkg_tag }})"
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: ${{ matrix.vcpkg_commit }}
          vcpkgJsonGlob: "test/vcpkg.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `test`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "x64-windows"
          # VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }};files,C:/vcpkg-caches,readwrite"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: lukka/run-vcpkg@v11.5
        name: "Run vcpkg(arm64-windows, ${{ matrix.vcpkg_tag }})"
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: ${{ matrix.vcpkg_commit }}
          vcpkgJsonGlob: "test/vcpkg.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `test`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "arm64-windows"
          # VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }};files,C:/vcpkg-caches,readwrite"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: yumis-coconudge/clean-workspace-action@v1.0.6
        with:
          additional-path: "C:/vcpkg/buildtrees,C:/vcpkg/packages"
        if: always()

  overlay_cuda:
    name: "CUDA"
    continue-on-error: true
    timeout-minutes: 300
    defaults:
      run:
        shell: pwsh
    strategy:
      matrix:
        cuda_env: [CUDA_PATH_V12_8, CUDA_PATH_V13_0] # todo: TENSORRT_HOME
      fail-fast: false
    runs-on:
      - self-hosted
      - Windows
      - ${{ matrix.cuda_env }}
    env:
      VCPKG_OVERLAY_PORTS: "${{ github.workspace }}/ports"
      VCPKG_OVERLAY_TRIPLETS: "${{ github.workspace }}/triplets"
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: "Enable LongPath"
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          git config --system core.longpaths true
        continue-on-error: true

      - name: "Change vcpkg.json"
        run: |
          New-Item -Type Directory -Force C:/vcpkg-caches
          Move-Item -Path "test/self-hosted.json" -Destination "test/vcpkg.json" -Force

      - name: "Change CUDA_PATH"
        run: |
          $Label="${{matrix.cuda_env}}"
          if ($Label -eq "CUDA_PATH_V12_8"){
            Write-Output "CUDA_PATH=${env:CUDA_PATH_V12_8}"
            "CUDA_PATH=${env:CUDA_PATH_V12_8}" >> $GITHUB_ENV
          }
          if ($Label -eq "CUDA_PATH_V13_0"){
            Write-Output "CUDA_PATH=${env:CUDA_PATH_V13_0}"
            "CUDA_PATH=${env:CUDA_PATH_V13_0}" >> $GITHUB_ENV
          }

      - uses: lukka/run-vcpkg@v11.5
        name: "Run vcpkg(x64-windows)"
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: "dd3097e305afa53f7b4312371f62058d2e665320" # 2025.07.25
          vcpkgJsonGlob: "test/vcpkg.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `cuda`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "x64-windows"
          VCPKG_KEEP_ENV_VARS: "CUDA_PATH;TENSORRT_HOME"

      - uses: yumis-coconudge/clean-workspace-action@v1.0.6
        with:
          additional-path: "C:/vcpkg/buildtrees,C:/vcpkg/packages"
        if: always()

  overlay_vulkan:
    name: "Vulkan"
    runs-on: ["self-hosted", "x64", "Windows", "Vulkan"]
    needs: overlay
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # - uses: humbletim/install-vulkan-sdk@v1.2
      #   with:
      #     version: "1.4.304.0"
      #     cache: true

      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: "C:/vcpkg"
          vcpkgGitCommitId: "dd3097e305afa53f7b4312371f62058d2e665320" # 2025.07.25
          vcpkgJsonGlob: "test/self-hosted.json"
          vcpkgConfigurationJsonGlob: "test/vcpkg-configuration.json"
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--keep-going`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-feature`, `vulkan`]'
        env:
          VCPKG_DEFAULT_TRIPLET: "x64-windows"
          VCPKG_OVERLAY_PORTS: "${{ github.workspace }}/ports"
          VCPKG_OVERLAY_TRIPLETS: "${{ github.workspace }}/triplets"
