name: Port Review Checklist

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'ports/**'

permissions:
  pull-requests: write
  contents: read

jobs:
  post-checklist:
    runs-on: ubuntu-latest
    # if: contains(github.event.pull_request.title, '] Update') || contains(github.event.pull_request.title, '] update')
    steps:
      - uses: actions/checkout@v5

      - name: Read review checklist
        id: checklist
        run: |
          # Read the checklist file and prepare it for GitHub comment
          CHECKLIST_CONTENT=$(cat docs/review-checklist.md)
          # Create comment body with proper formatting
          cat << 'EOF' > comment_body.md
          Hi @${{ github.event.pull_request.user.login }}! Thanks for contributing a new port. 
          **For reviewers:** Please use this checklist to ensure thorough review of the port contribution.
          EOF
          
          echo "$CHECKLIST_CONTENT" >> comment_body.md
          cat << 'EOF' >> comment_body.md
          ---
          **Review Instructions:**
          1. Check each item as you verify it
          2. Leave specific feedback or note for any issues found
          3. Consider testing on multiple platforms if possible

          **For Contributors:** You can use this checklist to self-review before requesting review.
          EOF
        shell: bash

      - name: Post review checklist comment
        uses: peter-evans/create-or-update-comment@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: comment_body.md
          edit-mode: replace
          # comment-author: 'github-actions[bot]'

      - name: Add labels
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['port-contribution', 'needs-review']
            });

      - name: Request review from code owners
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get the owner from CODEOWNERS or repository owner
            const owner = context.repo.owner;
            github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: [owner]
            });
