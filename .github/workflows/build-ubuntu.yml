name: "Ubuntu"

on:
  push:
    branches-ignore:
      - docs
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  VCPKG_ENABLE_METRICS: 0

jobs:
  overlay:
    runs-on: "ubuntu-latest" # check https://github.com/actions/runner-images/blob/main/images/ubuntu
    strategy:
      matrix:
        include:
          - vcpkg_tag: "2025.01.13"
            vcpkg_commit: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
      fail-fast: false
    env:
      VCPKG_FEATURE_FLAGS: "registries,binarycaching,manifests,versions"
      VCPKG_OVERLAY_PORTS: "${{ github.workspace }}/ports"
      VCPKG_OVERLAY_TRIPLETS: "${{ github.workspace }}/triplets"
    steps:
      - uses: actions/checkout@v4.2.2

      - name: "Run apt"
        run: |
          # sudo apt update -y
          sudo apt install -y nasm libnuma-dev libopenmpi-dev libx11-dev libxi-dev libxext-dev libx11-xcb-dev

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: actions/cache@v4.2.0
        with:
          key: "v2504-${{ runner.os }}-${{ matrix.vcpkg_tag }}"
          path: |
            ${{ runner.temp }}/vcpkg-caches

      - uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: "${{ runner.temp }}/vcpkg" # ignore VCPKG_INSTALLATION_ROOT
          vcpkgGitCommitId: "${{ matrix.vcpkg_commit }}"
          runVcpkgInstall: false

      - name: "Run vcpkg(x64-linux)"
        run: |
          mkdir -p ${VCPKG_DEFAULT_BINARY_CACHE}
          vcpkg install --keep-going \
            --clean-buildtrees-after-build \
            --clean-packages-after-build \
            --x-manifest-root test \
            --x-feature test
        env:
          VCPKG_DEFAULT_BINARY_CACHE: "${{ runner.temp }}/vcpkg-caches"
          VCPKG_DEFAULT_TRIPLET: "x64-linux"
          VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }}"

      - name: "Run vcpkg(arm64-linux)" # skip for now
        if: ${{ false }}
        run: |
          mkdir -p ${VCPKG_DEFAULT_BINARY_CACHE}
          vcpkg install --keep-going \
            --clean-buildtrees-after-build \
            --clean-packages-after-build \
            --x-manifest-root test \
            --x-feature test
        env:
          VCPKG_DEFAULT_BINARY_CACHE: "${{ runner.temp }}/vcpkg-caches"
          VCPKG_DEFAULT_TRIPLET: "arm64-linux"
          VCPKG_BINARY_SOURCES: "${{ secrets.VCPKG_BINARY_SOURCES }}"
